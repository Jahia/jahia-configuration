# +---------------------------------------------------------------------------+
# | Jahia advanced configuration file.                                        |
# +---------------------------------------------------------------------------+

######################################################################
### Cluster settings  ################################################
######################################################################

# Use this setting to activate most of the clustering communicating
cluster.activated                                      = false

# The serverId MUST be unique for each node of the cluster
cluster.node.serverId                                  = jahiaServer1

# The processingServer setting specifies whether this instance of Jahia
# will execute long-running operations such as activation jobs, XML imports,
# etc. In the current implementation only one cluster node may be a
# processing server, while all others must have this settings to the
# value "false".
processingServer                                       = true

# Here is a default configuration for the TCP Clustering
# The example below uses two-nodes cluster: 192.168.1.100 and 192.168.1.200
# Current node is 192.168.1.100
#
# Here your local ip address
cluster.tcp.start.ip_address                           =   192.168.1.100
# Here the minimum numbers of members in the group to be contacted for initial membership
#(if your cluster is higher than two nodes then upgrade this to at least 3)
cluster.tcp.num_initial_members                        =   2
# Here the list of all members ip and port, and local port for each channel
cluster.tcp.ehcache.hibernate.nodes.ip_address         =   192.168.1.100[7860],192.168.1.200[7860]
cluster.tcp.ehcache.hibernate.port                     =   7860
cluster.tcp.ehcache.jahia.nodes.ip_address             =   192.168.1.100[7870],192.168.1.200[7870]
cluster.tcp.ehcache.jahia.port                         =   7870

######################################################################
### Container Authentication ########################################
######################################################################
# Enable the container authentication valve
auth.container.enabled                                 = false

######################################################################
### SPNEGO Authentication config #####################################
######################################################################
# Enable the SpnegoHttpFilter and adjust its configuration in the
# applicationcontext-spnego.xml file
auth.spnego.enabled                                    = false

######################################################################
### CAS Authentication config ########################################
######################################################################
# Enable CAS authentication valve
auth.cas.enabled                                       = false
# URL prefix of the CAS server
auth.cas.serverUrlPrefix                               = https://localhost:8443/cas
# Redirect URL to the CAS server for login
auth.cas.loginUrl                                      = ${auth.cas.serverUrlPrefix}/login
# Logout URL to invalidate the user session on the CAS server
auth.cas.logoutUrl                                     = ${auth.cas.serverUrlPrefix}/logout
