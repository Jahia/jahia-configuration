<?xml version="1.0" encoding="ISO-8859-1"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">
    <bean id="indexationConfig" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="properties">
            <props>
                <!-- If set to true, no indexation is performed at all -->
                <prop key="indexingDisabled">false</prop>
                <prop key="optimizationInterval">12h</prop><!--The format of this is ' *w *d *h *m *s '
                                                     (representing weeks, days, hours and minutes - where * can be any number)
                                                      Examples: 4d, 5h 30m, 60m and 3w.
                                                      Note: Your current conversion rates are 1w = 7d and 1d = 24h -->

                <prop key="searchIndexRootDir">$context/WEB-INF/var/search_indexes</prop><!-- the root directory for search indexes -->
                <prop key="searchIndexerServerId"></prop><!-- the server id (cluster.node.serverId in jahia.properties) of the cluster node creating the index or empty if localIndexing is done -->
                <prop key="localIndexing">1</prop><!-- 1: index, 0: do not index ,just read ( I.E when sharing a same index directory in a clustered environment )-->
                <prop key="multipleIndexingServer">0</prop><!-- 0: Only one indexing server mode:
				                                                   If you only have one single indexing server, then you should use this mode
				                                                   so that the indexing jobs queue can be handled in an optimized way for better performance.

				                                                1: Multiple indexing server mode:
				                                                   If you have more than one indexing server, then you MUST use this mode.

				                                                -->
                <prop key="synxhronizedIndexationWaitDelay">5s</prop><!-- when a syncrhonized indexation is requested, this is the max wait time for
                                                                    the indexation to be done before the current Thread continues its execution -->
                <prop key="indexingStartupLatencyTime">30s</prop><!-- the latency time at search service startup before starting indexation -->
                                                        <!--The format of this is ' *w *d *h *m *s '
                                                           (representing weeks, days, hours and minutes - where * can be any number)
                                                            Examples: 4d, 5h 30m, 60m and 3w.
                                                            Note: Your current conversion rates are 1w = 7d and 1d = 24h -->
                <prop key="indexingJobWatchInterval">20s</prop><!-- the interval time between each scan of indexing jobs history ( loading them and process them if needed ) -->
                                                       <!--The format of this is ' *w *d *h *m *s ' -->
                <prop key="indexingJobExecutionDelayTime">30s</prop><!-- the delayed time before processing an indexing job ( an indexing job will be
        																														processed only after this delay time in regard to its creation time -->
                                                            <!--The format of this is ' *w *d *h *m *s ' -->
                <prop key="indexingJobInsertMapMaxSize">5000</prop><!-- the max number of entries for the Indexing Job Insert Map (to control backend memory usage) -->

                <prop key="indexingJobBatchSize">500</prop><!-- the batch size for handling the indexing job. Bigger means more memory required but faster -->
                <prop key="indexingJobMaxLifeTime">1d</prop><!-- the maximum life time of indexing job history. 12h by default, but should be i.e 1 day with several indexing servers in cluster  -->
                                                    <!--The format of this is ' *w *d *h *m *s ' -->
                <prop key="scoreBoostRefreshDelayTime">0</prop><!-- default delay after which field score boost are re-evaluated ( Values are reloaded from Field definitions ) -->
                                                         <!--The format of this is ' *w *d *h *m *s ' -->
                <prop key="dateRounding">1</prop><!--    dateRounding>=1440  -> round to the day
                                                  dateRounding>=60    -> round to the hour
                                                  dateRounding<60     -> round to the minute
                                                  to limit the number of term in the index -->

                <!-- search score boost factor -->
                <prop key="org.jahia.services.search.scoreBoost.metadata">2.0</prop><!-- default factor for all metadatas -->
                <prop key="org.jahia.services.search.analyzerForNumerics">keyword</prop><!-- default analyzer for all numerics -->
                <prop key="org.jahia.services.search.analyzerForKeywords">keyword</prop><!-- default analyzer for all keywords (sorting, faceting) -->

				<!-- lucene system property parameter -->
				<!--
				Lucene Property 	System Property 						Default Value
				mergeFactor  		org.apache.lucene.mergeFactor  			10
				minMergeDocs  		org.apache.lucene.maxBufferedDocs  		10
				maxMergeDocs  		org.apache.lucene.maxMergeDocs  		Integer.MAX_VALUE
				maxFieldLength  	org.apache.lucene.maxFieldLength  		10000
				COMMIT_LOCK_TIMEOUT org.apache.lucene.commitLockTimeout  	10000 ms
				WRITE_LOCK_TIMEOUT  org.apache.lucene.writeLockTimeout  	1000 ms
				maxClauseCount  	org.apache.lucene.maxClauseCount  		1024
				lockDir  			org.apache.lucene.lockDir  				the value of java.io.tmpdir system property
				-->
				<prop key="org.apache.lucene.mergeFactor">30</prop>
				<prop key="org.apache.lucene.maxBufferedDocs">1000</prop>
				<prop key="org.apache.lucene.commitLockTimeout">60000</prop>
				<prop key="org.apache.lucene.writeLockTimeout">6000</prop>
				<prop key="org.apache.lucene.maxClauseCount">2147483647</prop>
				<prop key="org.apache.lucene.useCompoundFile">0</prop> <!-- 0 for false -->
                <!--
                    When storing the index on an NFS file system, we recommend to comment the following line and activate the next two settings, as autocommit should be deactivated
                    and a ExpirationTimeDeletionPolicy deletion policy set.
                -->
                <prop key="org.apache.lucene.indexerAutoCommit">1</prop> <!-- 1 for true -->
                <!--
                <prop key="org.apache.lucene.indexDeletionPolicy">org.apache.lucene.index.ExpirationTimeDeletionPolicy</prop>
                <prop key="org.apache.lucene.expirationTimeForDeletion">60</prop>
                <prop key="org.apache.lucene.indexerAutoCommit">0</prop>
                -->
              </props>
		</property>
	</bean>

    <!-- sample indexation rule to delay indexation of all Jahia Content at specified times -->
    <bean id="delayedContentIndexationRule" class="org.jahia.services.search.indexingscheduler.impl.rule.BaseIndexationRule">
        <property name="id" value="1"/><!-- a unique id must be assigned to each rule -->
        <property name="namedID" value="delayedContentIndexationRule"/><!-- optional unique name used for declarative rule. -->
        <property name="name" value="Delayed Content Indexation Rule"/><!-- human readable name or description -->
        <property name="indexationMode" value="2"/><!-- Indexation mode :
                                                        0 = don't index,
                                                        1 = index immediately ( as soon as possible ),
                                                        2 = scheduled at specified time -->
        <property name="conditions"><!-- a rule returns true only if all its conditions evaluate to true -->
            <list>
                <bean class="org.jahia.services.search.indexingscheduler.impl.condition.ContentTypeRuleCondition">
                    <property name="allowAll" value="true"/>
                    <!-- In case allowAll is set to false, more precise content type regular expression pattern can be defined
                         "ContentPage" : match all pages
                         "ContentContainer" : match all containers
                         "ContentPage[|]name_news" : match all pages with the definition name "news"
                         "ContentContainer[|]name_.*news" : match all containers using a definition name, which ends with news
                         "ContentContainer[|]id_43" : match all containers using the definition with the given ID=43
                    -->
                    <property name="allowedContentTypes">
                        <list>
                            <value>ContentPage</value>
                            <value>ContentContainer</value>
                            <!--value>ContentContainer|name_BlogContainer</value-->
                            <!--value>ContentContainer|id_43</value-->
                        </list>
                    </property>
                </bean>
            </list>
        </property>
        <property name="dailyIndexationTimes"><!-- the range of allowed indexation time. Only used when the indexationMode == 2 -->
                                              <!-- if empty, scheduled as soon as possible ( deplayed by 30 sec by default ) -->
            <list>
                <bean class="org.jahia.services.search.indexingscheduler.TimeRange">
                    <property name="startHour" value="23"/>
                    <property name="startMinute" value="00"/>
                    <property name="endHour" value="3"/>
                    <property name="endMinute" value="00"/>
                </bean>
            </list>
        </property>
    </bean>

    <!-- sample indexation rule to delay indexation of File Field with pdf and office files at specified times -->
    <bean id="delayedFileFieldIndexationRule" class="org.jahia.services.search.indexingscheduler.impl.rule.BaseIndexationRule">
        <property name="id" value="2"/><!-- a unique id must be assigned to each rule -->
        <property name="namedID" value="delayedFileFieldIndexationRule"/><!-- optional unique name used for declarative rule. -->
        <property name="name" value="Delayed File Field Indexation Rule"/><!-- human readable name or description -->
        <property name="indexationMode" value="2"/><!-- Indexation mode :
                                                        0 = don't index,
                                                        1 = index immediately ( as soon as possible ),
                                                        2 = scheduled at specified time -->
        <property name="conditions"><!-- a rule returns true only if all its conditions evaluate to true -->
            <list>
                <bean class="org.jahia.services.search.indexingscheduler.impl.condition.FileFieldRuleCondition">
                    <property name="fileExtensions">
                        <list>
                            <value>.pdf</value>
                            <value>.doc</value>
                            <value>.xls</value>
                            <value>.ppt</value>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
        <property name="dailyIndexationTimes"><!-- the range of allowed indexation time. Only used when the indexationMode == 2 -->
                                            <!-- if empty, scheduled as soon as possible ( deplayed by 30 sec by default ) -->
            <list>
                <bean class="org.jahia.services.search.indexingscheduler.TimeRange">
                    <property name="startHour" value="23"/>
                    <property name="startMinute" value="00"/>
                    <property name="endHour" value="3"/>
                    <property name="endMinute" value="00"/>
                </bean>
            </list>
        </property>
    </bean>

    <!-- sample indexation rule used to schedule Blog Content for immediate indexation ( as soon as possible, using the indexation normal flow ) -->
    <bean id="blogContentIndexationRule" class="org.jahia.services.search.indexingscheduler.impl.rule.BaseIndexationRule">
        <property name="id" value="3"/><!-- a unique id must be assigned to each rule -->
        <property name="namedID" value="blogContentIndexationRule"/><!-- optional unique name used for declarative rule. -->
        <property name="name" value="Blog Content Indexation Rule"/><!-- human readable name or description -->
        <property name="indexationMode" value="2"/><!-- Indexation mode :
                                                        0 = don't index,
                                                        1 = index immediately ( as soon as possible ),
                                                        2 = scheduled at specified time -->
        <property name="conditions"><!-- a rule returns true only if all its conditions evaluate to true -->
            <list>
                <bean class="org.jahia.services.search.indexingscheduler.impl.condition.ContentTypeRuleCondition">
                    <property name="allowAll" value="false"/>
                    <!-- In case allowAll is set to false, more precise content type regular expression pattern can be defined
                         "ContentPage" : match all pages
                         "ContentContainer" : match all containers
                         "ContentPage[|]name_news" : match all pages with the definition name "news"
                         "ContentContainer[|]name_.*news" : match all containers using a definition name, which ends with news
                         "ContentContainer[|]id_43" : match all containers using the definition with the given ID=43
                    -->
                    <property name="allowedContentTypes">
                        <list>
                            <value>ContentPage[|]name_blog</value>
                            <value>ContentPage[|]name_blogListing</value>
                            <value>ContentContainer[|]name_.*blogEntries</value>
                            <value>ContentContainer[|]name_.*comments</value>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <!-- sample indexation rule used to exclude all content bellow a given Page node
        ( specifying its page id ) from indexation. -->
    <bean id="excludedSubTreeIndexationRule" class="org.jahia.services.search.indexingscheduler.impl.rule.BaseIndexationRule">
        <property name="id" value="4"/>
        <property name="namedID" value="excludedSubTreeIndexationRule"/>
        <property name="name" value="excluded SubTree Indexation Rule"/>
        <property name="indexationMode" value="0"/><!-- Indexation mode :
                                                        0 = don't index,
                                                        1 = index immediately ( as soon as possible ),
                                                        2 = scheduled at specified time -->
        <property name="conditions">
            <list>
                <bean class="org.jahia.services.search.indexingscheduler.impl.condition.ContentPagePathRuleCondition">
                    <property name="parentNodePages">
                        <list>
                            <value>3</value><!-- will match all content that are child of sub child of the parent page node 3 -->
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <bean id="synchronizedIndexationRule" class="org.jahia.services.search.indexingscheduler.impl.rule.BaseIndexationRule">
        <property name="id" value="5"/><!-- a unique id must be assigned to each rule -->
        <property name="namedID" value="newsContentIndexationRule"/><!-- optional unique name used for declarative rule. -->
        <property name="name" value="News Content Indexation Rule"/><!-- human readable name or description -->
        <property name="indexationMode" value="1"/><!-- Indexation mode :
                                                        0 = don't index,
                                                        1 = index immediately ( as soon as possible ),
                                                        2 = scheduled at specified time -->
        <property name="conditions"><!-- a rule returns true only if all its conditions evaluate to true -->
            <list>
                <bean class="org.jahia.services.search.indexingscheduler.impl.condition.ContentTypeRuleCondition">
                    <property name="allowAll" value="true"/>
                    <!-- In case allowAll is set to false, more precise content type regular expression pattern can be defined
                         "ContentPage" : match all pages
                         "ContentContainer" : match all containers
                         "ContentPage[|]name_news" : match all pages with the definition name "news"
                         "ContentContainer[|]name_.*news" : match all containers using a definition name, which ends with news
                         "ContentContainer[|]id_43" : match all containers using the definition with the given ID=43
                    -->
                    <!--
                    <property name="allowedContentTypes">
                        <list>
                            <value>ContentPage[|]name_news</value>
                            <value>ContentContainer[|]name_.*news</value>
                            <value>ContentContainer[|]name_.*press</value>
                            <value>ContentContainer[|]name_.*job</value>
                            <value>ContentContainer[|]name_.*events</value>
                        </list>
                    </property>
                    -->
                </bean>
                <bean class="org.jahia.services.search.indexingscheduler.impl.condition.ActionRuleCondition">
                    <property name="allowAll" value="false"/>
                    <property name="allowedActions">
                        <list>
                            <value>ADD_ENGINE</value>
                            <value>UPDATE_ENGINE</value>
                            <value>STORE_FORM_IN_TEMPLATE</value>
                            <value>COPY_JOB</value>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <!-- The bean bellow is used to add the list of Jahia Content Indexation Rules to the JahiaSearchIndexationService -->
    <bean id="contentIndexationRulesList" class="org.springframework.beans.factory.config.ListFactoryBean">
        <property name="sourceList">
            <list>
                <ref bean="synchronizedIndexationRule"/>
                <!-- uncomment each rule bean you want to use -->
                <!--ref bean="delayedContentIndexationRule"/-->
                <!--ref bean="blogContentIndexationRule"/-->
                <!--ref bean="excludedSubTreeIndexationRule"/-->
            </list>
        </property>
    </bean>

    <!--  The bean bellow is used to define the list of File Field Indexation Rules that will
          be used by the JahiaSearchIndexationService -->
    <bean id="fileFieldIndexationRulesList" class="org.springframework.beans.factory.config.ListFactoryBean">
        <property name="sourceList">
            <list>
                <!-- uncomment each rule bean you want to use -->
                <!--ref bean="delayedFileFieldIndexationRule"/-->
            </list>
        </property>
    </bean>
</beans>
