# +---------------------------------------------------------------------------+
# | Jahia main configuration file.                                            |
# +---------------------------------------------------------------------------+
#
#  This file contains some of the most important settings for configuring
#  it's behavior.
#  Other interesting files can be found elsewhere in the WEB-INF/etc
#  directory, such as WEB-INF/etc/spring for LDAP connector activation,
#  cache implementation configuration, Hibernate configuration, etc.

######################################################################
### Server  ##########################################################
######################################################################
# General server information, such as release version, the application
# server it is running on, as well as the home disk path to the deployed
# Jahia instance.
release                                                =
server                                                 =
# The server home disk path is application server specific, and is used
# to deploy and configure new portlets, as well as other specific
# adjustments such as Tomcat's in-memory realm automatic updating
# (tomcat-users.xml files).
serverHomeDiskPath                                     =


######################################################################
### Disk Paths  ######################################################
######################################################################
# The following disk paths configure where Jahia will store data on disk,
# such as temporary files or content files, or even in some cases where
# it will retrieve additional configuration from.

jahiaJspDiskPath                                       =   /
jahiaEnginesDiskPath                                   =   /engines/
jahiaTemplatesDiskPath                                 =   /modules/
jahiaHtmlEditorsDiskPath                               =   /htmleditors/
jahiaJavaScriptDiskPath                                =   /javascript/

jahiaFilesDiskPath                                     =   $context/WEB-INF
jahiaEtcDiskPath                                       =
jahiaVarDiskPath                                       =
jahiaFilesBigTextDiskPath                              =
tmpContentDiskPath                                     =   $context/WEB-INF/var/content/tmp/

jahiaSharedTemplatesDiskPath                           =
jahiaImportsDiskPath                                   =
jahiaWebAppsDiskPath                                   =

classDiskPath                                          =   /WEB-INF/classes/


######################################################################
### URL's  ###########################################################
######################################################################

jahiaHostHttpPath                                      =
jahiaTemplatesHttpPath                                 =
jahiaEnginesHttpPath                                   =
jahiaJavaScriptHttpPath                                =

jahiaWebAppsDeployerBaseURL                            = http://127.0.0.1:8080/manager/html/

# This parameter will force the generation of the /site/ URL parameter
# every time, even when sites are used with hostname resolution. This
# is useful when using front-end URL rewriting such as Apache's URL
# rewriting.
siteIDInURL                                            =   false

# This parameter will control, whether Jahia will check if the sitename and
# the page-ID are matching, as it is possible to manually modify the page ID
# in the URL and suddenly a page from a different site would be displayed. If
# the parameter is set to true, Jahia will throw a 404 error in case of a
# site/page mismatch
performSiteAndPageIDMatchCheck                         =   false

######################################################################
### Mail Service Configuration #######################################
######################################################################
# These settings configure how Jahia will send messages for
# error reports. They are configured via the configuration
# wizard upon initial installation of Jahia.
mail_service_activated                                 =   false
mail_server                                            =
mail_administrator                                     =
mail_from                                              =
mail_paranoia                                          =
# This parameter allows to control mail regrouping of a repeating exception
# If a repeating exception occurs more than this maximum, a mail will be
# sent anyway, just so that we are still informed in case this is the only
# error sent.
mail_maxRegroupingOfPreviousException                  = 500

######################################################################
### Database  ########################################################
######################################################################
# Database connection configuration is no longer configured here,
# but rather through container-managed datasource connection. In Tomcat
# these can be found in the following file:
# <jahia-web-app-dir>/META-INF/context.xml
db_script                                              =   hypersonic.script
# The following setting is used to limit the number of in values passed
# in SELECT * FROM XXX WHERE XXXX IN (VALUE_LIST) because some databases
# have limitations. Normally you shouldn't need to modify this parameter.
db_max_elements_for_in_clause                          =   1000
# The DB dialect to be used by the Hibernate
hibernate.dialect                                      =   @HIBERNATE_DIALECT@
# Should nested transaction be allowed?
nested.transaction.allowed                             =   @NESTED_TRANSACTION_ALLOWED@

######################################################################
### Characters encoding ##############################################
######################################################################
# Global encoding parameter, used to encode content to/from the database
utf8Encoding                                           =   true

# You may need to change the following values depending on the servlet
# container you are using. The default values here are designed to work
# with Tomcat.
#
# Default encoding for the output generated by Jahia (Html and Mail) :
defaultResponseBodyEncoding                            =   UTF-8
# Default encoding for URI and URLs send to Jahia :
defaultURIEncoding                                     =   UTF-8

######################################################################
### Cache settings ###################################################
######################################################################
# These settings controls all the caches that are integrated in Jahia,
# except for the Hibernate ones that are controlled from the
# WEB-INF/etc/spring/applicationcontext-hibernate.xml configuration
# file.
#
# The entry allow you to specify the amount of free memory you want to keep in your jvm
# If we reach this limit jahia will remove entries of his cache until if get under this limit
# this limit must be express in MB size
freeMemoryLimit = 64MB

# The following setting allows to select the underlying cache implementation used
# in the Jahia's cluster cache implementations. Possible values are :
# - jahiaReferenceCache : a cache implementation that uses SoftReferences to
#   hold references to the cached objects. This cache will free memory in order
#   to avoid OutOfMemory errors.
# - jahiaSimpleCache : an LRU cache implementation that uses the freeMemoryLimit
#   trigger to flush elements from memory
cacheClusterUnderlyingImplementation = jahiaReferenceCache

# caches may use groups that work like categories on cache entries. By default
# groups are limited in numbers of 20000, with an LRU (least recently used)
# algorithm for removing a group. When a group is removed, so are all the
# cache entries. If you see a lot of messages warning that groups were being
# flushed and that your Jahia installation has sufficient runtime memory,
# you should set this value higher. In installations with little memory
# available, you should keep this value as low as possible.
cacheMaxGroups = 20000

######################################################################
### Events       #####################################################
######################################################################
# Maximum number of events that can be delayed to the end of
# processing jobs.
maxAggregatedEvents                                    =   5000

######################################################################
### HTML Container Output cache  #####################################
######################################################################
# The HTML container cache is an embedded fragment cache, those caches
# automatically (or specifically using the <container-cache> tag)
# the output of <container> tags. This cache is very efficient for
# highly dynamic sites with lots of content, users and personalization
#
# The "HTML container output cache" cache html output from <container>
# and <container-cache> tags.
# outputContainerCacheActivated is a global control that allows to
# completely disable all caching for <container> and <container-cache>
# tags.
outputContainerCacheActivated                          =   true


# the following value is the default expiration date in seconds of container cache entries
# (for example 2592000secs is 30 days or 604800secs is 7 days)
# here the value is 4 hours

containerCacheDefaultExpirationDelay = 14400

# specifies whether the container cache should be only activated in
# live mode. You might want to activate this if you are doing very
# fancy checks in templates and are running into issues with cache
# invalidation in live mode.
containerCacheLiveModeOnly = false

######################################################################
### Template set #####################################################
######################################################################
# Default value for template set
default_templates_set		                        =   Web templates
# Default setting for the error handling in boxes.
# Can be overridden in the templates deployment descriptor (templates.xml)
# for each template set.
# How should we handle an exception within the box?
#    'hide' - the whole box content will not be written out into the JSP writer if any error occurs;
#    'compact' (default) - shows a predefined error message instead of partial box content
#    						(the message can be overridden using 'errorMessage' attribute);
#    'full' - shows real exception message with a stacktrace;
#    'propagate' - propagates the occurred exception to the higher level
#					(normally ends up with a standard error page)
templates.boxes.onError                             	= full

######################################################################
### Filemanager  #####################################################
######################################################################
# Configuration of the file manager that uses JCR as a back-end.
jahiaFileUploadMaxSize                                  =  104857600

######################################################################
### Templates Observer  ##############################################
######################################################################
# Time in milliseconds between checks for the template deployment
# descriptor changes in order to restart the JahiaTemplateManagerService.
# Set to -1 to deactivate changes detection completely.
# Note, if "developmentMode" option is set to "true", this parameter
# is ignored and the observer is started with the interval of 5 seconds.
templates.observer.interval                            =   60000

######################################################################
### WebApps Deployment  ##############################################
######################################################################
# This setting is configured by the configuration wizard to use the
# appropriate web applications deployer according to the application
# server platform which Jahia is running on. We recommend you do not
# modify this value unless it is false. Also currently only the Tomcat
# implementation is fully tested and supported.
JahiaWebAppsDeployerService                            =

######################################################################
### WebApps Preparing war  ##############################################
######################################################################
# In 'manager portlet' view, when you click on 'prepare war', it's saved in the filemanager
# The following value specifies where it's saved.
prepare.portlet.jcr.path       =   /content/shared/files

######################################################################
### Audit log  #######################################################
######################################################################
# Default values for amount of logs to be kept when flushing to a
# limit. Note that this doesn't mean that the logs cannot be larger
# than the amount specified, but simply that when limiting them, it
# will default to this value.
jahiaMaxLogs                                           =   500

######################################################################
### Multilingual support   ###########################################
######################################################################
# The fall-back language code after we have tried to resolve the
# current browsing code from :
# - the session
# - the browser's settings
# - the site's language list
org.jahia.multilang.default_language_code              =   en
# Resource bundle lookup mechanism type.
# If set to true, the default ResourceBundle resolution scheme
# is used, i.e. the Locale.getDefault() is considered before
# using bundle with the base name (no locale):
# 1) the requested locale is used
# 2) the current default locale as returned by Locale.getDefault()
# 3) the root resource bundle (basename) is used
# See http://java.sun.com/j2se/1.5.0/docs/api/java/util/ResourceBundle.html#getBundle(java.lang.String,%20java.util.Locale,%20java.lang.ClassLoader)
# for details.
# If the value is false the JSTL-like lookup is used:
# 1) the requested locale is used
# 2) the root resource bundle (basename) is used
# In this case the step with default locale is omitted.
considerDefaultJVMLocale                               =   false
# Should we switch to the user's preferred language after login?
# Language switch takes place only if the current site has entries
# in the user's preferred language
considerPreferredLanguageAfterLogin                    =   false

######################################################################
### ACLs   ###########################################################
######################################################################
# Specifies whether we should preload ACLs from database on startup.
org.jahia.acl.preload_active                           =   true

# Enable ACL check when displaying the current page path
# (using CurrentPagePathTag)
checkAclInPagePath                                     = true

######################################################################
### Tidy Configuration file ##########################################
######################################################################
# Tidy is an HTML parser that is one of the multiple ones that is
# used to verify HTML validity.
# this file must be located in <jahia>/WEB-INF/etc/config dir.
tidyConfig                                             =   tidy.properties

######################################################################
### Marked for deletion Content Object ###############################
######################################################################
# Set to true if you want marked for deleted content objects to be
# loaded as well as staging content
displayMarkedForDeletedContentObjects                  =   true

######################################################################
### Concurrent processing options ####################################
######################################################################
#
# This variable controls how many threads are allowed to do heavy weight
# processing (page creation not served from the cache)
maxParallelProcessings                                 = 40
# This variable controls how long threads are waiting to be able to start
# generating pages in heavy load situations (value in milliseconds)
pageGenerationWaitTime                                 = 30000
# This variable controls the setting of the HTTP Retry-After header, which is sent
# back to the client with a HTTP status code 503 (Service temporarily unavailable).
# It could be used also to trigger an automatic reload (value in seconds).
suggestedRetryTimeAfterTimeout                         = 60
# This variable controls how long threads are waiting to be able to start
# generating pages, when load is coming during server startup
# (value in milliseconds)
pageGenerationWaitTimeOnStartup                        = 10000
# This variable controls the setting of the HTTP Retry-After header, which is sent
# back to the client with a HTTP status code 503 (Service temporarily unavailable),
# when it was triggered during server startup. It could be used also to trigger
# an automatic reload (value in seconds).
suggestedRetryTimeAfterTimeoutOnStartup                = 15

######################################################################
### CAS Authentication config ########################################
######################################################################
# You can configure here the CAS authentication sub-system. First
# you must add the CAS valve in the WEB-INF/etc/spring/auth/applicationcontext-auth-pipeline.xml
# file in the authPipeline with the following section, add the end
# of the pipeline :
# <bean class="org.jahia.params.valves.CASAuthValveImpl" />
#
# The following setting configures the redirect URL to the CAS server
# for login
cas.loginUrl                                           = https://localhost:8443/cas/login
# The following setting configures the URL on which we validate the
# ticket.
cas.validateUrl                                        = https://localhost:8443/cas/serviceValidate

######################################################################
### Cookie authentication valve config #############################
######################################################################
#
# The cookie authentication valve is a system that uses cookies to store
# an identifier corresponding to a specific Jahia user, when he selects the
# "remember me" option in the login engine.
#
# Should we use cookie authentication for login ?
cookieAuthActivated                                    =   true

######################################################################
### Logoff Redirect ##################################################
######################################################################
# uncomment this to bypass the usual Jahia logout process and instead redirected the user after logout
# to a URL of your choice
#logoutRedirectUrl                                      =   http://www.acme.com/logoff.php

# Uncomment this to perform a forward to the internal page or JSP (the URL is context related) after user logout.
# This parameter is mutually exclusive with the previous one (logoutRedirectUrl).
# It will be considered only if the previous one is not set.
#logoutForwardUrl                                      =   /jsp/afterLogout.jsp

# Jahia was always forwarding the new page URL after logout, but this
# way the frontend HTML Container cache was not used. So the following
# setting does a client side redirect on logout to make use of the caches
# and save resources with not having to render the page after logout.
doRedirectOnLogout                                     = true

######################################################################
### Scheduler config  ################################################
######################################################################
# Path to scheduler configurations. The scheduler is used notably for processing
# background jobs such as the XML imports, workflow activation, etc.
# The RAM scheduler is a configuration of a scheduler that will not
# be persistent between application restarts, and is mostly used
# for non-critical tasks such as file listeners, cluster file
# synchronization
schedulerConfigFile                                    =   $context/WEB-INF/etc/config/quartz.properties
ramSchedulerConfigFile                                 =   $context/WEB-INF/etc/config/quartz-ram.properties

######################################################################
### Site serverName testing config ###################################
######################################################################
# The following configuration parameters mostly concern the generation of the
# "Exit Administration" button in the administration console. The URL that is
# generated to go back to a site needs to be tested first, in order to
# determine if we should generate an URL using the site's serverName or if
# we should generate an URL using the current host name used for accessing the
# administration servlet.
#
# For example, if for a site we have :
#    serverName="this.is.an.invalid.hostname",
#    serverKey="myTestSite"
# the following parameters will determine the URL that will be tested. So
# if we have the default, Jahia will try to connect to :
#    http://this.is.an.invalid.hostname:8080/jahia/jsp/isjahia.jsp
# and use the connection timeout that we specify. If the connection fails,
# the URL generated will be :
#    http://localhost:8080/jahia/Jahia/site/myTestSite
# The localhost:8080 part may be different if this is not what we are using
# when connecting to the administration servlet. If we are connected to the
# administration servlet with :
#    http://127.0.0.1:7070/cms/administration
# then the fallback URL for the "Exit Administration" would be :
#    http://127.0.0.1:7070/cms/Jahia/site/myTestSite
#
# The siteServerNameTestURLExpr can access the following variables :
#  "request" - an HttpServletRequest object
#  "siteServerName" - a String that contains the siteServerName we want to
# test.
# Expressions always start with "${" and end with "}". The expression
# language supported is JEXL. You can find more information about JEXL
# here : http://jakarta.apache.org/commons/jexl/
# Note : you can also change the name/location of the isjahia.jsp file. The
# only thing this resource must do is set a header called "jahia-version" that
# must be present for the siteServerName to be properly identified as a Jahia
# server.
siteServerNameTestURLExpr                              = ${request.scheme}://${siteServerName}:${request.serverPort}${request.contextPath}/isjahia.jsp
#
# Instead of using absolute URLs (e.g. http://www.acme.com:8081/jahia/Jahia/site/mySite/pid/2)
# for the "Exit Administration" button, as explained above, you can choose to generate
# relative URLs (e.g. /jahia/Jahia/site/mySite/pid/2) by uncommenting the option below:
# useRelativeSiteURLs                                   = true

# Url used by jahia to make HTTP request to itself.
#localAccessUri                                          = http\://localhost\:8080

# IP address of the server on the local network. The following two settings
# are used by the file synchronization service when configured in cluster
# to make sure that new templates and resources are properly deployed on
# each node.
localIp                                                  =
# The HTTP port of the server on the local network
localPort                                                = 8080

# The following parameter allows for configuration of the connection timeout
# when testing with the above URL. Don't set this too high as the connection
# will be attempted everytime an "Exit Administration" button is generated.
# The timeout value is in milliseconds.
siteServerNameTestConnectTimeout                       = 500

# The siteURLPortOverride allows to force the generation of siteURLs to a
# certain port. This will bypass the request.getServerPort() calls
# and everything else. If it is set to 0, the port override is inactive,
# but any other positive value will force the
# generation of the site URL (notably used in the Exit Administration button)
# to use the port specified here. Be careful when setting this might cause
# issues with cookies, or if you plan to access Jahia through multiple
# front-end machines.
siteURLPortOverride                                    = 0

######################################################################
### Cluster settings  ################################################
######################################################################

# Use this setting to activate most of the clustering communicating
cluster.activated                                      = false

# the serverId MUST be different for each node of the cluster.
cluster.node.serverId                                  = jahiaServer1

# The processingServer setting specifies whether this instance of Jahia
# will execute long-running operations such as activation jobs, XML imports,
# etc. In the current implementation only one cluster node may be a
# processing server, while all others must have this settings to the
# value "false".
processingServer                                       = true

# The following settings may be changed in order to avoid conflicts with
# existing multicast IP broadcasts on a network, or to change them to
# address ranges that are properly routed by the network hardware. The
# default values comply with the IANA address space
# (http://www.iana.org/assignments/multicast-addresses).
# Check out the assignment ranges to see if they may conflict with
# something that might be present on your network.

# The cluster communication protocol: either TCP or UDP
cluster.communication.protocol                         = TCP

# Here a default configuration for UDP Clustering
# You will have to comment the TCP configuration and uncomment the UDP settings in the
# following file: ../spring/applicationcontext-hibernate.xml

cluster.service.multicast.ip_address                   = 231.12.21.130
cluster.service.multicast.port                         = 45000
cluster.hibernate.multicast.ip_address                 = 231.12.21.134
cluster.hibernate.multicast.port                       = 45050

# Here a default configuration for TCP Clustering
# The example below uses two-nodes cluster: 192.168.1.100 and 192.168.1.200
# Current node is 192.168.1.100
#
# Here your local ip address
cluster.tcp.start.ip_address                           =   192.168.1.100
# Here the minimum numbers of members in the group to be contacted for initial membership
#(if your cluster is higher than two nodes then upgrade this to at least 3)
cluster.tcp.num_initial_members                        =   2
# Here the list of all members ip and port, and local port for each channel
cluster.tcp.service.nodes.ip_address                   =   192.168.1.100[7840],192.168.1.200[7840]
cluster.tcp.service.port                               =   7840
cluster.tcp.ehcache.hibernate.nodes.ip_address         =   192.168.1.100[7860],192.168.1.200[7860]
cluster.tcp.ehcache.hibernate.port                     =   7860
cluster.tcp.ehcache.jahia.nodes.ip_address             =   192.168.1.100[7870],192.168.1.200[7870]
cluster.tcp.ehcache.jahia.port                         =   7870

# For clustered caches, we use batching to avoid sending individual
# messages for each invalidation. Normally the messages are batched
# by transaction, but we can also specify a limit that if reached
# will send the batch anyway, in order to avoid consuming too much
# memory as well as sending huge messages through the network.
clusterCacheMaxBatchSize                               = 100000

######################################################################
### EhCache settings  ###############################################
######################################################################
ehcache.hibernate.file = ehcache-hibernate.xml
# For clustering comment above line and uncomment next line
#ehcache.hibernate.file = ehcache-hibernate_cluster.xml
ehcache.jahia.file = ehcache-jahia.xml
# For clustering comment above line and uncomment next line
#ehcache.jahia.file = ehcache-jahia_cluster.xml

######################################################################
### Workflow settings  ###############################################
######################################################################
# What is the default workflow type?
# Possible values are: inactive, two_validation_step_workflow, three_validation_step_workflow, four_validation_step_workflow
workflowDefaultType										= two_validation_step_workflow
# If set to 'true' the workflow status icons will also be displayed for pages with linked
# workflow type.
# This option does not apply to other content objects (containers and container lists).
# Workflow state icon for containers and container lists will only be shown in case they
# have an independent workflow type.
workflowDisplayStatusForLinkedPages                     = true

######################################################################
### Bigtext storage ##################################################
######################################################################
# This parameter selects the implementation of the big text storage
# service, which either enables storage in database or in the file
# system.
# Note that you should not change this setting if you already have
# content in your site as it will not automatically transfer content
# between the database and the filesystem.
bigtext.service                                         =

######################################################################
### Time-based publishing ############################################
######################################################################
# This setting can be used to de-activate the displaying of the
# time-based publishing actions.
showTimeBasedPublishingIcons                            = true

######################################################################
### Development Mode #################################################
######################################################################
# This setting can be used to deactivate development mode which flush
# the html cache each time you change the operation mode (live/edit)
developmentMode                                         = true

######################################################################
### Read-only Mode #################################################
######################################################################
# This setting can be used to activate read-only mode, which will not
# display the edit/admin tabs and links in the top admin bar
readOnlyMode                                            = false

######################################################################
### AES (Advanced Edition Settings) ##################################
######################################################################
# Enable/disable the information icons about current state of the
# content object.
# These are the default values, which can be changed by each user
# in the "Advanced edit mode" menu of the toolbar.
# Do we show icon, if the rights of the object differ from its parent?
aclDiff_display											= false
# The following setting controls an inline edition feature that
# allows users in edit mode to modify content directly in the HTML.
# This is only available for smalltext and bigtext fields.
inlineEditingActivated                                  = false
# Show integrity violation indicator?
integrityChecks_display                                 = false
# Show time-based publishing state?
timebased_display                                       = false
# Show workflow state information?
workflow_display                                        = true
######################################################################
### Locking ##########################################################
######################################################################
# Use locking during editing/workflow operations?
locksActivated                                          =  true

######################################################################
### Wizard-inserted properties  ######################################
######################################################################
# The following settings were inserted into this file by the
# configuration wizard and therefore are not documented.

######################################################################
### custom errorDocument site property  ##############################
######################################################################
# this setting enable specific error document pages for each site.
# if you uncomment this setting, you need to create an errors directory
# with your specific errorDocument jsp pages in the site directory first!
#
site.error.enabled 										= true

######################################################################
### Connection Timeout For Production Job ############################
######################################################################
# This setting allows you to specify the timeout for connecting this
# jahia instance to a distant jahia when using production job
# The settings is in milliseconds
connectionTimeoutForProductionJob                           = 60000

######################################################################
### container list pagination settings    ############################
######################################################################
preloadedItemsForPagination                               = 100

# Below you can change the default window size for the automatic pagination
# of lists displayed in templates using the *containerList tags
paginationWindowSize                                      = 100

######################################################################
### Session settings #################################################
######################################################################
# The editModeSessionTimeout variable controls the session timeout
# (in seconds, not milliseconds !) for a user that has entered
# edit mode, compare mode or preview mode. Jahia administrators are
# encouraged to augment this value so that content editors may spend
# more time editing a site without suffering from session timeouts.
# At the same time, the default timeout for "regular" users could be
# reduced to a lower value (by default 30 minutes on Tomcat) so that
# less memory is used by session data. In Tomcat, the default session
# setting is located in the tomcat/conf/web.xml file, under the tag
# <session-timeout>.
editModeSessionTimeout                                  = 1800

######################################################################
### User and Group name validation ###################################
######################################################################
# Pattern for the user name validation. The new user name will be
# tested against this regular expression (see java.util.regex.Pattern)
# pattern.
# Please update the resource bundle message:
# org.jahia.admin.users.ManageUsers.onlyCharacters.label
# (JahiaInternalResources.properties),
# to reflect the pattern changes
userManagementUserNamePattern                           = [0-9a-z_A-Z\\-\\{\\}\\.@]+
# Pattern for the group name validation. The new group name will be
# tested against this regular expression (see java.util.regex.Pattern)
# pattern.
# Please update the resource bundle message:
# org.jahia.admin.users.ManageGroups.onlyCharacters.label
# (JahiaInternalResources.properties),
# to reflect the pattern changes
userManagementGroupNamePattern                          = [0-9a-z_A-Z\\-\\{\\}]+

######################################################################
### Portlets #########################################################
######################################################################
# the following parameter activates AJAX rendering of portlets. This
# is available only for logged-in users and requires clients to
# support Javascript.
portletAJAXRenderingActivated = true

######################################################################
### Servlet response wrapper behavior control ########################
######################################################################
# The following setting controls whether a call to
# ServletIncludeResponseWrapper.flushBuffer() will actually trigger
# a buffer flush or not. The default behavior is to activate this,
# and this settings might be deprecated in a later version of Jahia
# if this control is not necessary, but we introduced it in order to
# control this behavior at deployment time.
wrapperBufferFlushingActivated = true

######################################################################
### Google analytics settings ########################################
######################################################################
# This version of Jahia allows to make sites trackable by google
# analytics, analytic data can be viewed in jahia in a window inten-
# ded for this purpose.
# To get data from the google analytics server, the site should have
# a preregistered properties such as the gmail account and password
# used when the google analytics account has been created.
# The following setting controls whether the gmail password will be
# exported when a site export is triggered.
# By default, it is set to true, if turned to false then the password
# will not be exported. Security conscious users might want to turn
# this off.
gmailPasswordExported = true

######################################################################
### History (breadcrumbs) settings ###################################
######################################################################
# The history settings (aka breadcrumbs), allows users to be able to
# quickly retrace their navigation in the Jahia web site. The settings
# below allow system administrators to configure this subsystem.
#
# the following setting specifies the length of the history stored
# in the session for each user, when the history toolbar is activated.
historySize = 5
# If the history tracking should be URL based, activate the setting
# below, otherwise Jahia will reconstruct the page URLs on each request.
# In general it is recommended to use the full URL based history
# tracking, which will conserve edition mode and other URL-based
# parameters.
historyUrlBased = true
